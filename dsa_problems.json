[
  {
    "Problem":"Reverse the array",
    "Category":"Array"
  },
  {
    "Problem":"Find the maximum and minimum element in an array",
    "Category":"Array"
  },
  {
    "Problem":"Find the \"Kth\" max and min element of an array ",
    "Category":"Array"
  },
  {
    "Problem":"Given an array which consists of only 0, 1 and 2. Sort the array without using any sorting algo",
    "Category":"Array"
  },
  {
    "Problem":"Move all the negative elements to one side of the array ",
    "Category":"Array"
  },
  {
    "Problem":"Find the Union and Intersection of the two sorted arrays.",
    "Category":"Array"
  },
  {
    "Problem":"Write a program to cyclically rotate an array by one.",
    "Category":"Array"
  },
  {
    "Problem":"find Largest sum contiguous Subarray [V. IMP]",
    "Category":"Array"
  },
  {
    "Problem":"Minimise the maximum difference between heights [V.IMP]",
    "Category":"Array"
  },
  {
    "Problem":"Minimum no. of Jumps to reach end of an array",
    "Category":"Array"
  },
  {
    "Problem":"find duplicate in an array of N+1 Integers",
    "Category":"Array"
  },
  {
    "Problem":"Merge 2 sorted arrays without using Extra space.",
    "Category":"Array"
  },
  {
    "Problem":"Kadane's Algo [V.V.V.V.V IMP]",
    "Category":"Array"
  },
  {
    "Problem":"Merge Intervals",
    "Category":"Array"
  },
  {
    "Problem":"Next Permutation",
    "Category":"Array"
  },
  {
    "Problem":"Count Inversion",
    "Category":"Array"
  },
  {
    "Problem":"Best time to buy and Sell stock",
    "Category":"Array"
  },
  {
    "Problem":"find all pairs on integer array whose sum is equal to given number",
    "Category":"Array"
  },
  {
    "Problem":"find common elements In 3 sorted arrays",
    "Category":"Array"
  },
  {
    "Problem":"Rearrange the array in alternating positive and negative items with O(1) extra space",
    "Category":"Array"
  },
  {
    "Problem":"Find if there is any subarray with sum equal to 0",
    "Category":"Array"
  },
  {
    "Problem":"Find factorial of a large number",
    "Category":"Array"
  },
  {
    "Problem":"find maximum product subarray ",
    "Category":"Array"
  },
  {
    "Problem":"Find longest coinsecutive subsequence",
    "Category":"Array"
  },
  {
    "Problem":"Given an array of size n and a number k, fin all elements that appear more than \" n\/k \" times.",
    "Category":"Array"
  },
  {
    "Problem":"Maximum profit by buying and selling a share atmost twice",
    "Category":"Array"
  },
  {
    "Problem":"Find whether an array is a subset of another array",
    "Category":"Array"
  },
  {
    "Problem":"Find the triplet that sum to a given value",
    "Category":"Array"
  },
  {
    "Problem":"Trapping Rain water problem",
    "Category":"Array"
  },
  {
    "Problem":"Chocolate Distribution problem",
    "Category":"Array"
  },
  {
    "Problem":"Smallest Subarray with sum greater than a given value",
    "Category":"Array"
  },
  {
    "Problem":"Three way partitioning of an array around a given value",
    "Category":"Array"
  },
  {
    "Problem":"Minimum swaps required bring elements less equal K together",
    "Category":"Array"
  },
  {
    "Problem":"Minimum no. of operations required to make an array palindrome",
    "Category":"Array"
  },
  {
    "Problem":"Median of 2 sorted arrays of equal size",
    "Category":"Array"
  },
  {
    "Problem":"Median of 2 sorted arrays of different size",
    "Category":"Array"
  },
  {
    "Problem":"Spiral traversal on a Matrix",
    "Category":"Matrix"
  },
  {
    "Problem":"Search an element in a matriix",
    "Category":"Matrix"
  },
  {
    "Problem":"Find median in a row wise sorted matrix",
    "Category":"Matrix"
  },
  {
    "Problem":"Find row with maximum no. of 1's",
    "Category":"Matrix"
  },
  {
    "Problem":"Print elements in sorted order using row-column wise sorted matrix",
    "Category":"Matrix"
  },
  {
    "Problem":"Maximum size rectangle",
    "Category":"Matrix"
  },
  {
    "Problem":"Find a specific pair in matrix",
    "Category":"Matrix"
  },
  {
    "Problem":"Rotate matrix by 90 degrees",
    "Category":"Matrix"
  },
  {
    "Problem":"Kth smallest element in a row-cpumn wise sorted matrix",
    "Category":"Matrix"
  },
  {
    "Problem":"Common elements in all rows of a given matrix",
    "Category":"Matrix"
  },
  {
    "Problem":"Reverse a String",
    "Category":"String"
  },
  {
    "Problem":"Check whether a String is Palindrome or not",
    "Category":"String"
  },
  {
    "Problem":"Find Duplicate characters in a string",
    "Category":"String"
  },
  {
    "Problem":"Why strings are immutable in Java?",
    "Category":"String"
  },
  {
    "Problem":"Write a Code to check whether one string is a rotation of another",
    "Category":"String"
  },
  {
    "Problem":"Write a Program to check whether a string is a valid shuffle of two strings or not",
    "Category":"String"
  },
  {
    "Problem":"Count and Say problem",
    "Category":"String"
  },
  {
    "Problem":"Write a program to find the longest Palindrome in a string.[ Longest palindromic Substring]",
    "Category":"String"
  },
  {
    "Problem":"Find Longest Recurring Subsequence in String",
    "Category":"String"
  },
  {
    "Problem":"Print all Subsequences of a string.",
    "Category":"String"
  },
  {
    "Problem":"Print all the permutations of the given string",
    "Category":"String"
  },
  {
    "Problem":"Split the Binary string into two substring with equal 0\u2019s and 1\u2019s",
    "Category":"String"
  },
  {
    "Problem":"Word Wrap Problem [VERY IMP].",
    "Category":"String"
  },
  {
    "Problem":"EDIT Distance [Very Imp]",
    "Category":"String"
  },
  {
    "Problem":"Find next greater number with same set of digits. [Very Very IMP]",
    "Category":"String"
  },
  {
    "Problem":"Balanced Parenthesis problem.[Imp]",
    "Category":"String"
  },
  {
    "Problem":"Word break Problem[ Very Imp]",
    "Category":"String"
  },
  {
    "Problem":"Rabin Karp Algo",
    "Category":"String"
  },
  {
    "Problem":"KMP Algo",
    "Category":"String"
  },
  {
    "Problem":"Convert a Sentence into its equivalent mobile numeric keypad sequence.",
    "Category":"String"
  },
  {
    "Problem":"Minimum number of bracket reversals needed to make an expression balanced.",
    "Category":"String"
  },
  {
    "Problem":"Count All Palindromic Subsequence in a given String.",
    "Category":"String"
  },
  {
    "Problem":"Count of number of given string in 2D character array",
    "Category":"String"
  },
  {
    "Problem":"Search a Word in a 2D Grid of characters.",
    "Category":"String"
  },
  {
    "Problem":"Boyer Moore Algorithm for Pattern Searching.",
    "Category":"String"
  },
  {
    "Problem":"Converting Roman Numerals to Decimal",
    "Category":"String"
  },
  {
    "Problem":"Longest Common Prefix",
    "Category":"String"
  },
  {
    "Problem":"Number of flips to make binary string alternate",
    "Category":"String"
  },
  {
    "Problem":"Find the first repeated word in string.",
    "Category":"String"
  },
  {
    "Problem":"Minimum number of swaps for bracket balancing.",
    "Category":"String"
  },
  {
    "Problem":"Find the longest common subsequence between two strings.",
    "Category":"String"
  },
  {
    "Problem":"Program to generate all possible valid IP addresses from given  string.",
    "Category":"String"
  },
  {
    "Problem":"Write a program tofind the smallest window that contains all characters of string itself.",
    "Category":"String"
  },
  {
    "Problem":"Rearrange characters in a string such that no two adjacent are same",
    "Category":"String"
  },
  {
    "Problem":"Minimum characters to be added at front to make string palindrome",
    "Category":"String"
  },
  {
    "Problem":"Given a sequence of words, print all anagrams together",
    "Category":"String"
  },
  {
    "Problem":"Find the smallest window in a string containing all characters of another string",
    "Category":"String"
  },
  {
    "Problem":"Recursively remove all adjacent duplicates",
    "Category":"String"
  },
  {
    "Problem":"String matching where one string contains wildcard characters",
    "Category":"String"
  },
  {
    "Problem":"Function to find Number of customers who could not get a computer",
    "Category":"String"
  },
  {
    "Problem":"Transform One String to Another using Minimum Number of Given Operation",
    "Category":"String"
  },
  {
    "Problem":"Check if two given strings are isomorphic to each other",
    "Category":"String"
  },
  {
    "Problem":"Recursively print all sentences that can be formed from list of word lists",
    "Category":"String"
  },
  {
    "Problem":"Find first and last positions of an element in a sorted array",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Find a Fixed Point (Value equal to index) in a given array",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Search in a rotated sorted array",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"square root of an integer",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Maximum and minimum of an array using minimum number of comparisons",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Optimum location of point to minimize total distance",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Find the repeating and the missing",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"find majority element",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Searching in an array where adjacent differ by at most k",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"find a pair with a given difference",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"find four elements that sum to a given value",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"maximum sum such that no 2 elements are adjacent",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Count triplet with sum smaller than a given value",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"merge 2 sorted arrays",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"print all subarrays with 0 sum",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Product array Puzzle",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Sort array according to count of set bits",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"minimum no. of swaps required to sort the array",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Bishu and Soldiers",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Rasta and Kheshtak",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Kth smallest number again",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Find pivot element in a sorted array",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"K-th Element of Two Sorted Arrays",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Aggressive cows",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Book Allocation Problem",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"EKOSPOJ:",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Job Scheduling Algo",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Missing Number in AP",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Smallest number with atleastn trailing zeroes infactorial",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Painters Partition Problem:",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"ROTI-Prata SPOJ",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"DoubleHelix SPOJ",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Subset Sums",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Findthe inversion count",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Implement Merge-sort in-place",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Partitioning and Sorting Arrays with Many Repeated Entries",
    "Category":"Searching & Sorting"
  },
  {
    "Problem":"Write a Program to reverse the Linked List. (Both Iterative and recursive)",
    "Category":"LinkedList"
  },
  {
    "Problem":"Reverse a Linked List in group of Given Size. [Very Imp]",
    "Category":"LinkedList"
  },
  {
    "Problem":"Write a program to Detect loop in a linked list.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Write a program to Delete loop in a linked list.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Find the starting point of the loop.\u00a0",
    "Category":"LinkedList"
  },
  {
    "Problem":"Remove Duplicates in a sorted Linked List.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Remove Duplicates in a Un-sorted Linked List.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Write a Program to Move the last element to Front in a Linked List.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Add \u201c1\u201d to a number represented as a Linked List.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Add two numbers represented by linked lists.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Intersection of two Sorted Linked List.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Intersection Point of two Linked Lists.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Merge Sort For Linked lists.[Very Important]",
    "Category":"LinkedList"
  },
  {
    "Problem":"Quicksort for Linked Lists.[Very Important]",
    "Category":"LinkedList"
  },
  {
    "Problem":"Find the middle Element of a linked list.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Check if a linked list is a circular linked list.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Split a Circular linked list into two halves.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Write a Program to check whether the Singly Linked list is a palindrome or not.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Deletion from a Circular Linked List.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Reverse a Doubly Linked list.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Find pairs with a given sum in a DLL.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Count triplets in a sorted DLL whose sum is equal to given value \u201cX\u201d.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Sort a \u201ck\u201dsorted Doubly Linked list.[Very IMP]",
    "Category":"LinkedList"
  },
  {
    "Problem":"Rotate DoublyLinked list by N nodes.",
    "Category":"LinkedList"
  },
  {
    "Problem":"Rotate a Doubly Linked list in group of Given Size.[Very IMP]",
    "Category":"LinkedList"
  },
  {
    "Problem":"Can we reverse a linked list in less than O(n) ?",
    "Category":"LinkedList"
  },
  {
    "Problem":"Why Quicksort is preferred for. Arrays and Merge Sort for LinkedLists ?",
    "Category":"LinkedList"
  },
  {
    "Problem":"Flatten a Linked List",
    "Category":"LinkedList"
  },
  {
    "Problem":"Sort a LL of 0's, 1's and 2's",
    "Category":"LinkedList"
  },
  {
    "Problem":"Clone a linked list with next and random pointer",
    "Category":"LinkedList"
  },
  {
    "Problem":"Merge K sorted Linked list",
    "Category":"LinkedList"
  },
  {
    "Problem":"Multiply 2 no. represented by LL",
    "Category":"LinkedList"
  },
  {
    "Problem":"Delete nodes which have a greater value on right side",
    "Category":"LinkedList"
  },
  {
    "Problem":"Segregate even and odd nodes in a Linked List",
    "Category":"LinkedList"
  },
  {
    "Problem":"Program for n\u2019th node from the end of a Linked List",
    "Category":"LinkedList"
  },
  {
    "Problem":"Find the first non-repeating character from a stream of characters",
    "Category":"LinkedList"
  },
  {
    "Problem":"level order traversal",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Reverse Level Order traversal",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Height of a tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Diameter of a tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Mirror of a tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Inorder Traversal of a tree both using recursion and Iteration",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Preorder Traversal of a tree both using recursion and Iteration",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Postorder Traversal of a tree both using recursion and Iteration",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Left View of a tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Right View of Tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Top View of a tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Bottom View of a tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Zig-Zag traversal of a binary tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Check if a tree is balanced or not",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Diagnol Traversal of a Binary tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Boundary traversal of a Binary tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Construct Binary Tree from String with Bracket Representation",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Convert Binary tree into Doubly Linked List",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Convert Binary tree into Sum tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Construct Binary tree from Inorder and preorder traversal",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Find minimum swaps required to convert a Binary tree into BST",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Check if Binary tree is Sum tree or not",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Check if all leaf nodes are at same level or not",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Check if a Binary Tree contains duplicate subtrees of size 2 or more [ IMP ]",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Check if 2 trees are mirror or not",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Sum of Nodes on the Longest path from root to leaf node ",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Check if given graph is tree or not.  [ IMP ]",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Find Largest subtree sum in a tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Maximum Sum of nodes in Binary tree such that no two are adjacent ",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Print all \"K\" Sum paths in a Binary tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Find LCA in a Binary tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Find distance between 2 nodes in a Binary tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Kth Ancestor of node in a Binary tree",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Find all Duplicate subtrees in a Binary tree [ IMP ]",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Tree Isomorphism Problem",
    "Category":"Binary Trees"
  },
  {
    "Problem":"Fina a value in a BST",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Deletion of a node in a BST",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Find min and max value in a BST",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Find inorder successor and inorder predecessor in a BST",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Check if a tree is a BST or not ",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Populate Inorder successor of all nodes",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Find LCA  of 2 nodes in a BST",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Construct BST from preorder traversal",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Convert Binary tree into BST",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Convert a normal BST into a Balanced BST",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Merge two BST [ V.V.V>IMP ]",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Find Kth largest element in a BST",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Find Kth smallest element in a BST",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Count pairs from 2 BST whose sum is equal to given value \"X\"",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Find the median of BST in O(n) time and O(1) space",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Count BST ndoes that lie in a given range",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Replace every element with the least greater element on its right",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Given \"n\" appointments, find the conflicting appointments",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Check preorder is valid or not",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Check whether BST contains Dead end",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Largest BST in a Binary Tree [ V.V.V.V.V IMP ]",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Flatten BST to sorted list",
    "Category":"Binary Search Trees"
  },
  {
    "Problem":"Activity Selection Problem",
    "Category":"Greedy"
  },
  {
    "Problem":"Job SequencingProblem",
    "Category":"Greedy"
  },
  {
    "Problem":"Huffman Coding",
    "Category":"Greedy"
  },
  {
    "Problem":"Water Connection Problem",
    "Category":"Greedy"
  },
  {
    "Problem":"Fractional Knapsack Problem",
    "Category":"Greedy"
  },
  {
    "Problem":"Greedy Algorithm to find Minimum number of Coins",
    "Category":"Greedy"
  },
  {
    "Problem":"Maximum trains for which stoppage can be provided",
    "Category":"Greedy"
  },
  {
    "Problem":"Minimum Platforms Problem",
    "Category":"Greedy"
  },
  {
    "Problem":"Buy Maximum Stocks if i stocks can be bought on i-th day",
    "Category":"Greedy"
  },
  {
    "Problem":"Find the minimum and maximum amount to buy all N candies",
    "Category":"Greedy"
  },
  {
    "Problem":"Minimize Cash Flow among a given set of friends who have borrowed money from each other",
    "Category":"Greedy"
  },
  {
    "Problem":"Minimum Cost to cut a board into squares",
    "Category":"Greedy"
  },
  {
    "Problem":"Check if it is possible to survive on Island",
    "Category":"Greedy"
  },
  {
    "Problem":"Find maximum meetings in one room",
    "Category":"Greedy"
  },
  {
    "Problem":"Maximum product subset of an array",
    "Category":"Greedy"
  },
  {
    "Problem":"Maximize array sum after K negations",
    "Category":"Greedy"
  },
  {
    "Problem":"Maximize the sum of arr[i]*i",
    "Category":"Greedy"
  },
  {
    "Problem":"Maximum sum of absolute difference of an array",
    "Category":"Greedy"
  },
  {
    "Problem":"Maximize sum of consecutive differences in a circular array",
    "Category":"Greedy"
  },
  {
    "Problem":"Minimum sum of absolute difference of pairs of two arrays",
    "Category":"Greedy"
  },
  {
    "Problem":"Program for Shortest Job First (or SJF) CPU Scheduling",
    "Category":"Greedy"
  },
  {
    "Problem":"Program for Least Recently Used (LRU) Page Replacement algorithm",
    "Category":"Greedy"
  },
  {
    "Problem":"Smallest subset with sum greater than all other elements",
    "Category":"Greedy"
  },
  {
    "Problem":"Chocolate Distribution Problem",
    "Category":"Greedy"
  },
  {
    "Problem":"DEFKIN -Defense of a Kingdom",
    "Category":"Greedy"
  },
  {
    "Problem":"DIEHARD -DIE HARD",
    "Category":"Greedy"
  },
  {
    "Problem":"GERGOVIA -Wine trading in Gergovia",
    "Category":"Greedy"
  },
  {
    "Problem":"Picking Up Chicks",
    "Category":"Greedy"
  },
  {
    "Problem":"CHOCOLA \u2013Chocolate",
    "Category":"Greedy"
  },
  {
    "Problem":"ARRANGE -Arranging Amplifiers",
    "Category":"Greedy"
  },
  {
    "Problem":"K Centers Problem",
    "Category":"Greedy"
  },
  {
    "Problem":"Minimum Cost of ropes",
    "Category":"Greedy"
  },
  {
    "Problem":"Find smallest number with given number of digits and sum of digits",
    "Category":"Greedy"
  },
  {
    "Problem":"Rearrange characters in a string such that no two adjacent are same",
    "Category":"Greedy"
  },
  {
    "Problem":"Find maximum sum possible equal sum of three stacks",
    "Category":"Greedy"
  },
  {
    "Problem":"Rat in a maze Problem",
    "Category":"BackTracking"
  },
  {
    "Problem":"Printing all solutions in N-Queen Problem",
    "Category":"BackTracking"
  },
  {
    "Problem":"Word Break Problem using Backtracking",
    "Category":"BackTracking"
  },
  {
    "Problem":"Remove Invalid Parentheses",
    "Category":"BackTracking"
  },
  {
    "Problem":"Sudoku Solver",
    "Category":"BackTracking"
  },
  {
    "Problem":"m Coloring Problem",
    "Category":"BackTracking"
  },
  {
    "Problem":"Print all palindromic partitions of a string",
    "Category":"BackTracking"
  },
  {
    "Problem":"Subset Sum Problem",
    "Category":"BackTracking"
  },
  {
    "Problem":"The Knight\u2019s tour problem",
    "Category":"BackTracking"
  },
  {
    "Problem":"Tug of War",
    "Category":"BackTracking"
  },
  {
    "Problem":"Find shortest safe route in a path with landmines",
    "Category":"BackTracking"
  },
  {
    "Problem":"Combinational Sum",
    "Category":"BackTracking"
  },
  {
    "Problem":"Find Maximum number possible by doing at-most K swaps",
    "Category":"BackTracking"
  },
  {
    "Problem":"Print all permutations of a string ",
    "Category":"BackTracking"
  },
  {
    "Problem":"Find if there is a path of more than k length from a source",
    "Category":"BackTracking"
  },
  {
    "Problem":"Longest Possible Route in a Matrix with Hurdles",
    "Category":"BackTracking"
  },
  {
    "Problem":"Print all possible paths from top left to bottom right of a mXn matrix",
    "Category":"BackTracking"
  },
  {
    "Problem":"Partition of a set intoK subsets with equal sum",
    "Category":"BackTracking"
  },
  {
    "Problem":"Find the K-th Permutation Sequence of first N natural numbers",
    "Category":"BackTracking"
  },
  {
    "Problem":" Implement Stack from Scratch",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":" Implement Queue from Scratch",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Implement 2 stack in an array",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"find the middle element of a stack",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Implement \"N\" stacks in an Array",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Check the expression has valid or Balanced parenthesis or not.",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Reverse a String using Stack",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Design a Stack that supports getMin() in O(1) time and O(1) extra space.",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Find the next Greater element",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"The celebrity Problem",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Arithmetic Expression evaluation",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Evaluation of Postfix expression",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Implement a method to insert an element at its bottom without using any other data structure.",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Reverse a stack using recursion",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Sort a Stack using recursion",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Merge Overlapping Intervals",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Largest rectangular Area in Histogram",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Length of the Longest Valid Substring",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Expression contains redundant bracket or not",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Implement Stack using Queue",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Implement Stack using Deque",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Stack Permutations (Check if an array is stack permutation of other)",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Implement Queue using Stack  ",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Implement \"n\" queue in an array",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Implement a Circular queue",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"LRU Cache Implementationa",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Reverse a Queue using recursion",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Reverse the first \u201cK\u201d elements of a queue",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Interleave the first half of the queue with second half",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Find the first circular tour that visits all Petrol Pumps",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Minimum time required to rot all oranges",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Distance of nearest cell having 1 in a binary matrix",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"First negative integer in every window of size \u201ck\u201d",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Check if all levels of two trees are anagrams or not.",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Sum of minimum and maximum elements of all subarrays of size \u201ck\u201d.",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Minimum sum of squares of character counts in a given string after removing \u201ck\u201d characters.",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Queue based approach or first non-repeating character in a stream.",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Next Smaller Element",
    "Category":"Stacks & Queues"
  },
  {
    "Problem":"Implement a Maxheap\/MinHeap using arrays and recursion.",
    "Category":"Heap"
  },
  {
    "Problem":"Sort an Array using heap. (HeapSort)",
    "Category":"Heap"
  },
  {
    "Problem":"Maximum of all subarrays of size k.",
    "Category":"Heap"
  },
  {
    "Problem":"\u201ck\u201d largest element in an array",
    "Category":"Heap"
  },
  {
    "Problem":"Kth smallest and largest element in an unsorted array",
    "Category":"Heap"
  },
  {
    "Problem":"Merge \u201cK\u201d sorted arrays. [ IMP ]",
    "Category":"Heap"
  },
  {
    "Problem":"Merge 2 Binary Max Heaps",
    "Category":"Heap"
  },
  {
    "Problem":"Kth largest sum continuous subarrays",
    "Category":"Heap"
  },
  {
    "Problem":"Leetcode- reorganize strings",
    "Category":"Heap"
  },
  {
    "Problem":"Merge \u201cK\u201d Sorted Linked Lists [V.IMP]",
    "Category":"Heap"
  },
  {
    "Problem":"Smallest range in \u201cK\u201d Lists",
    "Category":"Heap"
  },
  {
    "Problem":"Median in a stream of Integers",
    "Category":"Heap"
  },
  {
    "Problem":"Check if a Binary Tree is Heap",
    "Category":"Heap"
  },
  {
    "Problem":"Connect \u201cn\u201d ropes with minimum cost",
    "Category":"Heap"
  },
  {
    "Problem":"Convert BST to Min Heap",
    "Category":"Heap"
  },
  {
    "Problem":"Convert min heap to max heap",
    "Category":"Heap"
  },
  {
    "Problem":"Rearrange characters in a string such that no two adjacent are same.",
    "Category":"Heap"
  },
  {
    "Problem":"Minimum sum of two numbers formed from digits of an array",
    "Category":"Heap"
  },
  {
    "Problem":"Create a Graph, print it",
    "Category":"Graph"
  },
  {
    "Problem":"Implement BFS algorithm ",
    "Category":"Graph"
  },
  {
    "Problem":"Implement DFS Algo ",
    "Category":"Graph"
  },
  {
    "Problem":"Detect Cycle in Directed Graph using BFS\/DFS Algo ",
    "Category":"Graph"
  },
  {
    "Problem":"Detect Cycle in UnDirected Graph using BFS\/DFS Algo ",
    "Category":"Graph"
  },
  {
    "Problem":"Search in a Maze",
    "Category":"Graph"
  },
  {
    "Problem":"Minimum Step by Knight",
    "Category":"Graph"
  },
  {
    "Problem":"flood fill algo",
    "Category":"Graph"
  },
  {
    "Problem":"Clone a graph",
    "Category":"Graph"
  },
  {
    "Problem":"Making wired Connections",
    "Category":"Graph"
  },
  {
    "Problem":"word Ladder ",
    "Category":"Graph"
  },
  {
    "Problem":"Dijkstra algo",
    "Category":"Graph"
  },
  {
    "Problem":"Implement Topological Sort ",
    "Category":"Graph"
  },
  {
    "Problem":"Minimum time taken by each job to be completed given by a Directed Acyclic Graph",
    "Category":"Graph"
  },
  {
    "Problem":"Find whether it is possible to finish all tasks or not from given dependencies",
    "Category":"Graph"
  },
  {
    "Problem":"Find the no. of Isalnds",
    "Category":"Graph"
  },
  {
    "Problem":"Given a sorted Dictionary of an Alien Language, find order of characters",
    "Category":"Graph"
  },
  {
    "Problem":"Implement Kruksal\u2019sAlgorithm",
    "Category":"Graph"
  },
  {
    "Problem":"Implement Prim\u2019s Algorithm",
    "Category":"Graph"
  },
  {
    "Problem":"Total no. of Spanning tree in a graph",
    "Category":"Graph"
  },
  {
    "Problem":"Implement Bellman Ford Algorithm",
    "Category":"Graph"
  },
  {
    "Problem":"Implement Floyd warshallAlgorithm",
    "Category":"Graph"
  },
  {
    "Problem":"Travelling Salesman Problem",
    "Category":"Graph"
  },
  {
    "Problem":"Graph ColouringProblem",
    "Category":"Graph"
  },
  {
    "Problem":"Snake and Ladders Problem",
    "Category":"Graph"
  },
  {
    "Problem":"Find bridge in a graph",
    "Category":"Graph"
  },
  {
    "Problem":"Count Strongly connected Components(Kosaraju Algo)",
    "Category":"Graph"
  },
  {
    "Problem":"Check whether a graph is Bipartite or Not",
    "Category":"Graph"
  },
  {
    "Problem":"Detect Negative cycle in a graph",
    "Category":"Graph"
  },
  {
    "Problem":"Longest path in a Directed Acyclic Graph",
    "Category":"Graph"
  },
  {
    "Problem":"Journey to the Moon",
    "Category":"Graph"
  },
  {
    "Problem":"Cheapest Flights Within K Stops",
    "Category":"Graph"
  },
  {
    "Problem":"Oliver and the Game",
    "Category":"Graph"
  },
  {
    "Problem":"Water Jug problem using BFS",
    "Category":"Graph"
  },
  {
    "Problem":"Water Jug problem using BFS",
    "Category":"Graph"
  },
  {
    "Problem":"Find if there is a path of more thank length from a source",
    "Category":"Graph"
  },
  {
    "Problem":"M-ColouringProblem",
    "Category":"Graph"
  },
  {
    "Problem":"Minimum edges to reverse o make path from source to destination",
    "Category":"Graph"
  },
  {
    "Problem":"Paths to travel each nodes using each edge(Seven Bridges)",
    "Category":"Graph"
  },
  {
    "Problem":"Vertex Cover Problem",
    "Category":"Graph"
  },
  {
    "Problem":"Chinese Postman or Route Inspection",
    "Category":"Graph"
  },
  {
    "Problem":"Number of Triangles in a Directed and Undirected Graph",
    "Category":"Graph"
  },
  {
    "Problem":"Minimise the cashflow among a given set of friends who have borrowed money from each other",
    "Category":"Graph"
  },
  {
    "Problem":"Two Clique Problem",
    "Category":"Graph"
  },
  {
    "Problem":"Construct a trie from scratch",
    "Category":"Trie"
  },
  {
    "Problem":"Find shortest unique prefix for every word in a given list",
    "Category":"Trie"
  },
  {
    "Problem":"Word Break Problem | (Trie solution)",
    "Category":"Trie"
  },
  {
    "Problem":"Given a sequence of words, print all anagrams together",
    "Category":"Trie"
  },
  {
    "Problem":"Implement a Phone Directory",
    "Category":"Trie"
  },
  {
    "Problem":"Print unique rows in a given boolean matrix",
    "Category":"Trie"
  },
  {
    "Problem":"Coin ChangeProblem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Knapsack Problem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Binomial CoefficientProblem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Permutation CoefficientProblem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Program for nth Catalan Number",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Matrix Chain Multiplication\u00a0",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Edit Distance",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Subset Sum Problem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Friends Pairing Problem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Gold Mine Problem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Assembly Line SchedulingProblem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Painting the Fenceproblem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Maximize The Cut Segments",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Longest Common Subsequence",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Longest Repeated Subsequence",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Longest Increasing Subsequence",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Space Optimized Solution of LCS",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"LCS (Longest Common Subsequence) of three strings",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Maximum Sum Increasing Subsequence",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Count all subsequences having product less than K",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Longest subsequence such that difference between adjacent is one",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Maximum subsequence sum such that no three are consecutive",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Egg Dropping Problem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Maximum Length Chain of Pairs",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Maximum size square sub-matrix with all 1s",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Maximum sum of pairs with specific difference",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Min Cost PathProblem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Maximum difference of zeros and ones in binary string",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Minimum number of jumps to reach end",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Minimum cost to fill given weight in a bag",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Minimum removals from array to make max \u2013min <= K",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Longest Common Substring",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Count number of ways to reacha given score in a game",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Count Balanced Binary Trees of Height h",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"LargestSum Contiguous Subarray [V>V>V>V IMP ]",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Smallest sum contiguous subarray",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Unbounded Knapsack (Repetition of items allowed)",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Word Break Problem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Largest Independent Set Problem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Partition problem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Longest Palindromic Subsequence",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Count All Palindromic Subsequence in a given String",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Longest Palindromic Substring",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Longest alternating subsequence",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Weighted Job Scheduling",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Coin game winner where every player has three choices",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Count Derangements (Permutation such that no element appears in its original position) [ IMPORTANT ]",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Maximum profit by buying and selling a share at most twice [ IMP ]",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Optimal Strategy for a Game",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Optimal Binary Search Tree",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Palindrome PartitioningProblem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Word Wrap Problem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Mobile Numeric Keypad Problem [ IMP ]",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Boolean Parenthesization Problem",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Largest rectangular sub-matrix whose sum is 0",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Largest area rectangular sub-matrix with equal number of 1\u2019s and 0\u2019s [ IMP ]",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Maximum sum rectangle in a 2D matrix",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Maximum profit by buying and selling a share at most k times",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Find if a string is interleaved of two other strings",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Maximum Length of Pair Chain",
    "Category":"Dynamic Programming"
  },
  {
    "Problem":"Count set bits in an integer",
    "Category":"Bit Manipulation"
  },
  {
    "Problem":"Find the two non-repeating elements in an array of repeating elements",
    "Category":"Bit Manipulation"
  },
  {
    "Problem":"Count number of bits to be flipped to convert A to B",
    "Category":"Bit Manipulation"
  },
  {
    "Problem":"Count total set bits in all numbers from 1 to n",
    "Category":"Bit Manipulation"
  },
  {
    "Problem":"Program to find whether a no is power of two",
    "Category":"Bit Manipulation"
  },
  {
    "Problem":"Find position of the only set bit",
    "Category":"Bit Manipulation"
  },
  {
    "Problem":"Copy set bits in a range",
    "Category":"Bit Manipulation"
  },
  {
    "Problem":"Divide two integers without using multiplication, division and mod operator",
    "Category":"Bit Manipulation"
  },
  {
    "Problem":"Calculate square of a number without using *, \/ and pow()",
    "Category":"Bit Manipulation"
  },
  {
    "Problem":"Power Set",
    "Category":"Bit Manipulation"
  }
]